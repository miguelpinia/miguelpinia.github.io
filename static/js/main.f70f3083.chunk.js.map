{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Header","Layout","Content","Sider","Footer","Title","Typography","Text","Main","Fragment","span","justify","size","xs","sm","md","lg","xl","xxl","src","icon","AntDesignOutlined","level","type","title","placement","color","shape","TwitterOutlined","href","GithubOutlined","LinkedinOutlined","About","Experience","Interests","Curriculum","Software","Articles","Blog","Default","MyMenu","selectedKey","changeSelectedKey","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","UserOutlined","Item","onClick","LaptopOutlined","NotificationOutlined","Sidebar","menu","width","className","breakpoint","collapsedWidth","trigger","views","main","about","experience","interests","curriculum","software","articles","blog","breads","Page","React","useState","visible","setVisible","setSelectedKey","breadcrumbs","setBreadcrumbs","event","console","log","key","minHeight","onClose","flex","MenuOutlined","theme","padding","margin","map","bread","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f70f3083.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport {\n  Avatar,\n  Breadcrumb,\n  Button,\n  Col,\n  Drawer,\n  Layout,\n  Menu,\n  Row,\n  Tooltip,\n  Typography\n} from 'antd';\nimport {\n  AntDesignOutlined,\n  GithubOutlined,\n  LaptopOutlined,\n  LinkedinOutlined,\n  MenuOutlined,\n  NotificationOutlined,\n  TwitterOutlined,\n  UserOutlined\n} from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider, Footer } = Layout;\nconst { Title, Text } = Typography;\n\nconst Main = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col span={8} />\n        <Col span={8}>\n          <Row justify='center'>\n            <Avatar\n              size={{\n                xs: 100,\n                sm: 100,\n                md: 100,\n                lg: 100,\n                xl: 100,\n                xxl: 100\n              }}\n              src='https://avatars1.githubusercontent.com/u/5816646?s=460&u=250c0dc6f60ffaaa30deb15669b9b9bd4448d817&v=4'\n              icon={<AntDesignOutlined />}\n            />\n          </Row>\n          <Row justify='center'>\n            <Title level={3}>Miguel Pi√±a</Title>\n          </Row>\n          <Row justify='center'>\n            <Text type='secondary'>CS PhD Student</Text>\n          </Row>\n          <Row justify='center'>\n            <Col span={8}>\n              <Row justify='center'>\n                <Tooltip title='Twitter' placement='bottom' color='blue'>\n                  <Button\n                    type='link'\n                    shape='circle'\n                    icon={<TwitterOutlined />}\n                    size='large'\n                    href='https://twitter.com/miguelpinia'\n                  />\n                </Tooltip>\n              </Row>\n            </Col>\n            <Col span={8}>\n              <Row justify='center'>\n                <Tooltip title='Github' placement='bottom' color='blue'>\n                  <Button\n                    type='link'\n                    href='https://github.com/miguelpinia'\n                    shape='circle'\n                    icon={<GithubOutlined />}\n                    size='large'\n                  />\n                </Tooltip>\n              </Row>\n            </Col>\n            <Col span={8}>\n              <Row justify='center'>\n                <Tooltip title='LinkedIn' placement='bottom' color='blue'>\n                  <Button\n                    type='link'\n                    shape='circle'\n                    icon={<LinkedinOutlined />}\n                    size='large'\n                    href='https://www.linkedin.com/in/miguel-angel-pi%C3%B1a-avelino-a3488a26/'\n                  />\n                </Tooltip>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} />\n      </Row>\n    </React.Fragment>\n  );\n};\n\nconst About = () => {\n  return 'About';\n};\n\nconst Experience = () => {\n  return 'Experience';\n};\n\nconst Interests = () => {\n  return 'Interests';\n};\n\nconst Curriculum = () => {\n  return 'Curriculum';\n};\n\nconst Software = () => {\n  return 'Software';\n};\n\nconst Articles = () => {\n  return 'Articles';\n};\n\nconst Blog = () => {\n  return 'Blog entries';\n};\n\nconst Default = () => {\n  return <Title level={4}>Under construction</Title>;\n};\n\nconst MyMenu = ({ selectedKey, changeSelectedKey }) => {\n  return (\n    <>\n      <Menu\n        mode='inline'\n        defaultSelectedKeys={['main']}\n        defaultOpenKeys={['sub1']}\n        style={{ height: '100%', borderRight: 0 }}>\n        <SubMenu key='sub1' icon={<UserOutlined />} title='Home'>\n          <Menu.Item key='main' onClick={changeSelectedKey}>\n            Main\n          </Menu.Item>\n          <Menu.Item key='about' onClick={changeSelectedKey}>\n            About\n          </Menu.Item>\n          <Menu.Item key='experience' onClick={changeSelectedKey}>\n            Experience\n          </Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub2' icon={<LaptopOutlined />} title='Works'>\n          <Menu.Item key='interests' onClick={changeSelectedKey}>\n            Interests\n          </Menu.Item>\n          <Menu.Item key='curriculum' onClick={changeSelectedKey}>\n            CV\n          </Menu.Item>\n          <Menu.Item key='software' onClick={changeSelectedKey}>\n            Software\n          </Menu.Item>\n          <Menu.Item key='articles' onClick={changeSelectedKey}>\n            Articles\n          </Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub3' icon={<NotificationOutlined />} title='Blog'>\n          <Menu.Item key='blog' onClick={changeSelectedKey}>\n            Blog posts\n          </Menu.Item>\n        </SubMenu>\n      </Menu>\n    </>\n  );\n};\n\nconst Sidebar = ({ menu }) => {\n  return (\n    <>\n      <Sider\n        width={200}\n        className='site-layout-background'\n        breakpoint='lg'\n        collapsedWidth={0}\n        trigger={null}>\n        {menu}\n      </Sider>\n    </>\n  );\n};\n\nconst views = {\n  main: <Main />,\n  about: <About />,\n  experience: <Experience />,\n  interests: <Interests />,\n  curriculum: <Curriculum />,\n  software: <Software />,\n  articles: <Articles />,\n  blog: <Blog />\n};\n\nconst breads = {\n  main: ['Home', 'Main'],\n  about: ['Home', 'About'],\n  experience: ['Home', 'Experience'],\n  interests: ['Works', 'Interests'],\n  curriculum: ['Works', 'Curriculum'],\n  software: ['Works', 'Software'],\n  articles: ['Works', 'Articles'],\n  blog: ['Blog', 'Posts']\n};\n\nconst Page = () => {\n  const [visible, setVisible] = React.useState(false);\n  const [selectedKey, setSelectedKey] = React.useState('main');\n  const [breadcrumbs, setBreadcrumbs] = React.useState('main');\n\n  const changeSelectedKey = (event) => {\n    console.log('changeSelectedKey', event);\n    const key = event.key;\n    setSelectedKey(key);\n    setBreadcrumbs(key);\n  };\n\n  const menu = (\n    <MyMenu selectedKey={selectedKey} changeSelectedKey={changeSelectedKey} />\n  );\n\n  return (\n    <>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header className='header'>\n          <Drawer\n            title='Menu'\n            placement='left'\n            onClose={() => setVisible(false)}\n            visible={visible}>\n            {menu}\n          </Drawer>\n          <Row>\n            <Col flex='60px'>\n              <Button\n                className='menu'\n                type='primary'\n                icon={<MenuOutlined />}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n            <Col flex='auto'>\n              <Menu theme='dark' mode='horizontal' defaultSelectedKeys={['1']}>\n                <Menu.Item key='1'>Miguel Pi√±a</Menu.Item>\n              </Menu>\n            </Col>\n          </Row>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            {breads[breadcrumbs].map((bread) => (\n              <Breadcrumb.Item>{bread}</Breadcrumb.Item>\n            ))}\n          </Breadcrumb>\n          <Layout\n            className='site-layout-background'\n            style={{ padding: '24px 0' }}>\n            <Sidebar menu={menu} />\n            <Content\n              className='site-layout-background'\n              style={{\n                padding: '24px 24px',\n                minHeight: 720\n              }}>\n              {views[selectedKey] || <Default />}\n            </Content>\n          </Layout>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Miguel Pi√±a ¬©2020</Footer>\n      </Layout>\n    </>\n  );\n};\n\nfunction App() {\n  return <Page />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}